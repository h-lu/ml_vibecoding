---
title: "1.4 首次 Vibe Coding 实践：优化一个真实的ML原型"
---

理论是灰色的，而生命之树常青。现在，让我们卷起袖子，亲身体验一个完整的 Vibe Coding 循环。在这个实践中，你将扮演一名系统设计师的角色，任务是为一个电信公司构建一个客户流失预测模型。我们将使用一个真实的、公开的数据集，整个过程将更贴近真实世界的工作流。

### 任务背景与数据

**商业目标**：一家电信公司希望能够提前识别出哪些客户有可能会在下个月取消服务，以便营销团队可以对这些高风险客户进行精准地挽留，从而降低客户流失率，节约成本。

**数据**：我们将使用经典的 **IBM Telco Customer Churn** 数据集。这是一个在业界和学术界被广泛用于教学和实践的真实数据集。

**请前往 Kaggle 下载数据集**:
[https://www.kaggle.com/datasets/blastchar/telco-customer-churn](https://www.kaggle.com/datasets/blastchar/telco-customer-churn)

下载后，请将 `WA_Fn-UseC_-Telco-Customer-Churn.csv` 文件放在与你的代码相同的目录下，并可以将其重命名为 `churn_data.csv` 以方便使用。花几分钟时间在 Kaggle 页面上浏览一下数据列的描述，熟悉一下你将要处理的数据。

### 第一阶段：AI 起草 (15分钟)

在这一阶段，我们的目标是利用 AI 快速生成一个可工作的基线模型 (Baseline Model)。关键在于**如何清晰地向 AI 表达我们的初始意图**。

打开你选择的 AI 助手（例如 DeepSeek, ChatGPT, Claude, Gemini），并使用下面这个精心设计的提示。

> **提示 (Prompt):**
>
> “你好，请扮演一名初级数据分析师。我希望你用 Python 和 scikit-learn 帮我分析一个客户流失数据集 (`churn_data.csv`)。
>
> 请你完成以下任务：
>
> 1.  加载数据，并做一个非常基础的数据探索（EDA），特别是看一看目标变量 `Churn` 的分布情况。
> 2.  对数据进行预处理，为建模做准备。你需要处理类别特征和数值特征，并处理缺失值。
> 3.  帮我构建一个逻辑回归（Logistic Regression）模型来预测客户是否流失。
> 4.  最后，请评估模型的表现，告诉我它的准确率和完整的分类报告。
>
> 请给出完整、可以直接运行的 Python 代码。”

**学生观察与执行**：

1.  将上述提示输入 AI 助手。
2.  AI 会为你生成一个 Python 脚本。
3.  **在你自己的环境中运行这个脚本。**
4.  仔细观察 AI 的输出。它可能会打印出数据集的基本信息、一个图表、以及模型的评估结果。

至此，AI 的起草工作完成了。我们有了一个能跑通的原型。但这个原型真的能解决我们面临的商业问题吗？一个真正的系统设计师的旅程，现在才刚刚开始。

### 第二阶段：人类优化与人机协作 (25分钟)

现在，系统设计师登场。我们的工作不是全盘接受，而是对 AI 的初稿进行**批判性审查和优化**，将我们的智慧、商业理解和第一性原理的思考注入其中。

**请带着以下问题，像侦探一样审视 AI 生成的代码和结果：**

1. 业务层面的灵魂拷问：我们追求的目标正确吗
    -   AI 给了我们一个“准确率”(Accuracy) 分数。这看起来很直观，但它真的是我们老板最关心的指标吗？
    -   **思考实验**: 假设我们公司有两种运营错误：
        - **错误A (错失)**: 模型说某个客户**不会**流失，结果他下个月就走了。我们因此失去了一个客户，损失了他未来可能带来的所有收入（比如 $500）。
        - **错误B (骚扰)**: 模型说某个客户**会**流失，结果他其实很忠诚。我们给他发了挽留优惠券，花费了 $50 的营销成本。
    -   **请回答**: 哪种错误的代价更高？如果你是项目负责人，你更希望你的模型避免犯哪种错误？
    -   **行动指引**: 查看 AI 生成的“分类报告”(Classification Report)，在 `precision`、`recall`、`f1-score` 中，哪个指标能更好地衡量我们“识别出真正要流失客户”的能力？它是否应该成为我们优化的核心？

2. 数据与工程层面的审视：我们信任 AI 的处理方式吗？
    -   **提问**: AI 是如何处理数据中的缺失值的？它选择的填充策略在所有情况下都合理吗？
    -   **提问**: 查看 `Churn` 列的分布图。流失和未流失客户数量是否平衡？如果不平衡，会对模型产生什么影响？
    -   **行动指引 (最佳实践)**: 在真实的机器学习项目中，为了避免“数据泄露”（Data Leakage），一个关键的最佳实践是使用 `sklearn.pipeline.Pipeline`。它能将数据预处理步骤和模型训练步骤“打包”在一起，确保只在训练数据上“学习”预处理规则，然后应用到测试数据上。

        > **与AI协作**: 你可以向你的AI助手提问：“请帮我重构之前的代码，使用 scikit-learn 的 Pipeline 将预处理步骤和模型封装起来。”

3. 模型层面的探索：有没有更好的工具？
    -   **提问**: AI 使用了逻辑回归。这是一个经典、可解释性强的模型，但它的核心假设是线性的。我们凭什么相信客户流失的行为能被一个简单的线性平面分开？
    -   **行动指引 (人机协作)**: 现在，让我们把 AI 当作一个“技术顾问”。向它提出一个更开放的问题：

        > “针对这个电信客户流失预测问题，除了逻辑回归，还有哪些更强大的分类模型可以选择？请推荐两到三种，并简单说明它们各自的优缺点，尤其是在处理复杂关系和类别不平衡问题上的能力。”
    -   AI 可能会推荐 `RandomForestClassifier` 或 `HistGradientBoostingClassifier` 等。根据它的建议，选择一个更强大的模型来替换掉 `Pipeline` 中的逻辑回归。

**学生动手**：
现在，基于你以上的独立思考和与AI的协作，动手修改 AI 生成的代码。你不必追求一次性完美，选择你认为最重要的一两个点进行优化即可。比如：

-   使用 `Pipeline` 重构代码。
-   在模型中加入 `class_weight='balanced'` 来应对类别不平衡。
-   尝试使用 AI 推荐的 `HistGradientBoostingClassifier` 替换 `LogisticRegression`。

### 第三阶段：系统验证与反思 (10分钟)

重新运行你优化后的代码，并将新的结果与第一阶段的进行对比。

**请回答并记录你的发现**:

-   优化后，你最关心的那个**核心业务指标**（比如召回率 Recall）发生了什么变化？是提升了还是下降了？整体准确率呢？你如何解释这种变化？
-   对比两个模型的结果，你认为哪个模型更能帮助公司实现其商业目标？为什么？
-   **反思讨论**:
    -   在这个 Vibe Coding 循环中，AI 的价值体现在哪里？
    -   你，作为人类设计师，最关键的贡献是什么？是写了更复杂的代码，还是提出了更深刻的问题并引导AI去解决？
    -   我们是如何发现并弥补 AI 的“盲点”的？这个过程给你未来与 AI 协作带来什么启发？

恭喜你！你刚刚完成了一次更接近真实的 Vibe Coding 实践。你没有盲从 AI 的指令，而是引导它、审视它、并最终改进了它的工作成果，将一个平庸的原型，变成了一个真正对业务有价值的系统雏形。这，就是系统设计师的价值所在。
