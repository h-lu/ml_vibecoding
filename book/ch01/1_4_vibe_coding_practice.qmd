---
title: "1.4 首次 Vibe Coding 实践：优化一个真实的ML原型"
---

理论是灰色的，而生命之树常青。现在，让我们卷起袖子，亲身体验一个完整的 Vibe Coding 循环。在这个实践中，你将扮演一名系统设计师的角色，任务是为一个电信公司构建一个客户流失预测模型。我们将使用一个真实的、公开的数据集，整个过程将更贴近真实世界的工作流。

### 任务背景与数据

**商业目标**：一家电信公司希望能够提前识别出哪些客户有可能会在下个月取消服务，以便营销团队可以对这些高风险客户进行精准地挽留，从而降低客户流失率，节约成本。

**数据**：我们将使用经典的 **IBM Telco Customer Churn** 数据集。这是一个在业界和学术界被广泛用于教学和实践的真实数据集。

**请前往 Kaggle 下载数据集**:
[https://www.kaggle.com/datasets/blastchar/telco-customer-churn](https://www.kaggle.com/datasets/blastchar/telco-customer-churn)

下载后，请将 `WA_Fn-UseC_-Telco-Customer-Churn.csv` 文件放在与你的代码相同的目录下，并可以将其重命名为 `churn_data.csv` 以方便使用。花几分钟时间在 Kaggle 页面上浏览一下数据列的描述，熟悉一下你将要处理的数据。

### 第一阶段：AI 起草 (15分钟)

在这一阶段，我们的目标是利用 AI 快速生成一个可工作的基线模型 (Baseline Model)。关键在于**如何清晰地向 AI 表达我们的初始意图**。

打开你选择的 AI 助手（例如 DeepSeek, ChatGPT, Claude, Gemini），并使用下面这个精心设计的提示。

> **提示 (Prompt):**
>
> “你好，请扮演一名初级数据分析师。我希望你用 Python 和 scikit-learn 帮我分析一个客户流失数据集 (`churn_data.csv`)。
>
> 请你完成以下任务：
> 1.  加载数据，并做一个非常基础的数据探索（EDA），特别是看一看目标变量 `Churn` 的分布情况。
> 2.  对数据进行预处理，为建模做准备。你可以自己判断选择哪些特征列，并处理一下缺失值。
> 3.  帮我构建一个逻辑回归（Logistic Regression）模型来预测客户是否流失。
> 4.  最后，请评估模型的表现，告诉我它的准确率和完整的分类报告。
>
> 请给出完整、可以直接运行的 Python 代码。”

**学生观察与执行**：
1.  将上述提示输入 AI 助手。
2.  AI 会为你生成一个 Python 脚本。
3.  **在你自己的环境中运行这个脚本。**
4.  仔细观察 AI 的输出。它可能会打印出数据集的基本信息、一个图表、以及模型的评估结果。

至此，AI 的起草工作完成了。我们有了一个能跑通的原型。但这个原型真的能解决我们面临的商业问题吗？一个真正的系统设计师的旅程，现在才刚刚开始。

### 第二阶段：人类优化 (25分钟)

现在，系统设计师登场。我们的工作不是全盘接受，而是对 AI 的初稿进行**批判性审查和优化**，将我们的智慧、商业理解和第一性原理的思考注入其中。

**请带着以下问题，像侦探一样审视 AI 生成的代码和结果：**

**1. 业务层面的灵魂拷问：我们追求的目标正确吗？**
   -   AI 给了我们一个“准确率”(Accuracy) 分数。这看起来很直观，但它真的是我们老板最关心的指标吗？
   -   **思考实验**: 假设我们公司有两种运营错误：
        - **错误A (错失)**: 模型说某个客户**不会**流失，结果他下个月就走了。我们因此失去了一个客户，损失了他未来可能带来的所有收入（比如 $500）。
        - **错误B (骚扰)**: 模型说某个客户**会**流失，结果他其实很忠诚。我们给他发了挽留优惠券，花费了 $50 的营销成本。
   -   **请回答**: 哪种错误的代价更高？如果你是项目负责人，你更希望你的模型避免犯哪种错误？
   -   **行动指引**: 查看 AI 生成的“分类报告”(Classification Report)，在 `precision`、`recall`、`f1-score` 中，哪个指标能更好地衡量我们“识别出真正要流失客户”的能力？它是否应该成为我们优化的核心？

**2. 数据层面的审视：我们信任 AI 的数据处理方式吗？**
   -   **提问**: AI 是如何处理数据中的缺失值的？它选择的填充策略（比如用平均值、中位数或直接删除）在所有情况下都合理吗？对于一个刚入网1个月的新用户和一个在网10年的老用户，他们的 `TotalCharges`（总消费）如果缺失，用同一个值填充是否会引入偏差？
   -   **提问**: 查看 `Churn` 列的分布图。流失的客户和未流失的客户数量是否大致相等？如果不是，这种“类别不平衡”可能会对模型产生什么影响？（提示：一个只预测“不流失”的模型，在不平衡数据上准确率也会很高，但它毫无用处。）
   -   **行动指引**: 你能想到哪些更好的数据处理策略来解决这些潜在问题？（例如：`class_weight` 参数、SMOTE 过采样技术、更精细的缺失值填充逻辑等）。

**3. 模型层面的探索：有没有更好的工具？**
   -   **提问**: AI 使用了逻辑回归。这是一个经典、简单且可解释性强的模型。但它的一个核心假设是什么？（提示：与线性和非线性有关）。
   -   **提问**: 我们凭什么相信客户流失的行为是能被一条直线或一个简单的线性平面分开的？有没有可能存在更复杂的模式，例如“在网时间很短”和“在网时间很长”的客户都容易流失，呈现一个U型关系？
   -   **行动指引**: 除了逻辑回归，你还知道哪些其他的分类模型？（例如：决策树、随机森林、梯度提升树等）。选择其中一个，替换掉 AI 原本的逻辑回归模型，看看性能表现有何不同。

**学生动手**：
现在，基于你以上的独立思考，动手修改 AI 生成的代码。你不必追求一次性完美，选择你认为最重要的一两个点进行优化即可。比如：
-   在模型中加入 `class_weight='balanced'` 来应对类别不平衡。
-   将核心评估指标的关注点从 `accuracy` 转移到你认为更重要的指标上。
-   尝试使用 `RandomForestClassifier` 替换 `LogisticRegression`。

### 第三阶段：系统验证与反思 (10分钟)

重新运行你优化后的代码，并将新的结果与第一阶段的进行对比。

**请回答并记录你的发现**:
-   优化后，你最关心的那个**核心业务指标**（比如召回率 Recall）发生了什么变化？是提升了还是下降了？整体准确率呢？你如何解释这种变化？
-   对比两个模型的结果，你认为哪个模型更能帮助公司实现其商业目标？为什么？
-   **反思讨论**:
    -   在这个 Vibe Coding 循环中，AI 的价值体现在哪里？
    -   你，作为人类设计师，最关键的贡献是什么？是写了更复杂的代码，还是提出了更深刻的问题？
    -   我们是如何发现 AI 的“盲点”的？这个过程给你未来与 AI 协作带来什么启发？

恭喜你！你刚刚完成了一次更接近真实的 Vibe Coding 实践。你没有盲从 AI 的指令，而是引导它、审视它、并最终改进了它的工作成果，将一个平庸的原型，变成了一个真正对业务有价值的系统雏形。这，就是系统设计师的价值所在。
