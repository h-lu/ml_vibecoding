{"title":"5.5 Vibe Coding 实践：从标准模型到业务对齐","markdown":{"yaml":{"title":"5.5 Vibe Coding 实践：从标准模型到业务对齐"},"headingText":"一个重要的教学时刻：告别波士顿房价数据集","containsRefs":false,"markdown":"\n\n现在，我们将把本章学习的所有知识——线性回归、正则化、XAI——串联起来，完成一次端到端的 Vibe Coding 实践。我们将再次回到开篇的房价预测案例，但这一次，我们不仅要构建一个能用的模型，更要挑战自己，作为一个“系统架构师”，思考如何让模型与真实的商业目标对齐。\n\n::: {.callout-warning}\n\n在许多旧的教程和书籍中，你会看到一个名为“波士顿房价”的经典数据集。然而，本教材决定**不再使用**它。\n\n研究发现，该数据集包含一个基于种族偏见构建的、存在严重伦理问题的特征。继续使用它会不自觉地让模型学习并可能放大现实世界中的系统性不公。\n\n从 `scikit-learn` 1.2 版本开始，这个数据集已被正式移除。作为未来的机器学习系统架构师，识别并拒绝使用存在伦理风险的数据，是我们必须具备的核心素养之一。\n\n因此，在本次实践中，我们将使用 `scikit-learn` 官方推荐的替代品——**加州房价数据集 (California Housing Dataset)**。它规模更大，数据更现代，是学习回归任务的绝佳选择。\n:::\n\n\n### 任务描述\n\n我们将使用加州房价数据集来完成一个典型的回归任务。该数据集的预测目标是加州某地区房屋价格的中位数。\n\n### 第一阶段：AI 快速实现 (10分钟)\n\n在这一阶段，我们让 AI 扮演一个高效的“代码工程师”，快速地实现一个标准的、稳健的机器学习工作流。\n\n> **提示 (Prompt):**\n>\n> “你好，请帮我用 Python 的 `scikit-learn` 和 `shap` 库来解决一个房价预测问题。请使用**加州房价数据集 (California Housing Dataset)**。\n>\n> 请按以下步骤操作：\n>\n> 1.  从 `sklearn.datasets` 中使用 `fetch_california_housing` 加载数据集，并将数据分为训练集和测试集。\n> 2.  **构建一个Lasso回归模型**。由于特征的尺度不同，请在Pipeline中先使用 `StandardScaler` 对数据进行标准化处理。\n> 3.  使用 **5折交叉验证 (`LassoCV`)** 来自动寻找最佳的正则化强度超参数 (alpha)。  \n>    **补充说明：** 这里的 `alpha` 就是正则化项的强度参数，在数学公式中常常记作 $\\lambda$。在 `scikit-learn` 的 Lasso 实现中，`alpha` 和 $\\lambda$ 实际上是等价的，只是命名不同。它们都控制着正则化惩罚的力度，`alpha` 越大，模型系数被压缩得越厉害，特征选择越激进。\n> 4.  在测试集上评估模型的性能，打印出均方误差 (MSE) 和 R-squared ($R^2$)。\n> 5.  **使用 SHAP 库来解释你训练好的模型**。请生成并展示以下两种图：\n>     a.  针对测试集中**第一个样本**的 **SHAP 力图 (force plot)**。\n>     b.  针对整个**训练集**的 **SHAP 摘要图 (summary plot)**。\n>\n> 请提供完整的、可以直接运行的代码。”\n\n**学生观察**:\n将以上提示词交给 AI 助手。你将看到，AI 几乎能瞬间生成一个完整、专业的工作流代码。它处理了数据加载、标准化、超参数调优、模型评估和可解释性分析等所有标准步骤。这就是 Vibe Coding 的第一步：**将繁琐的、标准化的实现工作，最大程度地自动化。**\n\n### 第二阶段：人类优化与业务对齐 (30分钟)\n\n现在，轮到你——“系统架构师”——登场了。AI 给出的标准答案并不一定是商业上的最佳答案。你需要戴上“业务的眼镜”来审视这个模型，并提出更深刻的优化方向。\n\n请思考以下几个引导性问题：\n\n**1. 损失函数的“灵魂拷问”**\n\nAI 使用的 `LassoCV` 默认优化的目标是**均方误差 (Mean Squared Error, MSE)**。MSE 对所有错误一视同仁，预测高了1万和预测低了1万，在数学上是完全等价的。\n\n但**在真实的房产业务中，这两种错误的商业成本真的相同吗？**\n\n-   **高价低估 (Underestimation)**: 将一套实际价值50万美金的房子，错误地预测为48万。\n    -   *潜在后果*: 公司可能会以偏低的价格从房主手中收购，损失了2万的潜在收益；或者，给出的挂牌建议价过低，让卖家觉得我们不专业，从而流失客户。\n-   **低价高估 (Overestimation)**: 将一套实际价值40万美金的房子，错误地预测为42万。\n    -   *潜在后果*: 公司以过高的价格收购了房产，增加了库存风险；或者，建议的挂牌价过高，导致房子长期无人问津，浪费了营销资源和时间成本。\n\n**你的任务 (思考与伪代码)**:\n\n-   你认为哪种错误的商业成本更高？或者它们在不同场景下成本不同？\n-   如果让你设计一个新的、**非对称的损失函数**来取代 MSE，你会怎么设计？请尝试用伪代码或数学公式写出你的想法。例如：\n\n    ```\n    function asymmetric_loss(y_true, y_pred):\n        error = y_true - y_pred\n        if error > 0:  // 高价低估 (y_true > y_pred)\n            return 1.5 * (error ** 2) // 施加更大的惩罚\n        else: // 低价高估\n            return 1.0 * (error ** 2)\n    ```\n\n**2. 模型选择的权衡：从 Lasso 到 ElasticNet**\n\nLasso 很强大，但它有一个潜在的“个性”：当面对一组高度相关的特征时（例如，“房屋平均年龄”和“附近房屋平均年龄”），它倾向于随机选择其中一个特征，并将其他相关特征的系数压缩为零。这可能导致模型不稳定，并且可能会丢失一些有用的信息。\n\n作为架构师，你需要思考：有没有一种模型既能像 Lasso 一样进行特征选择，又能像 Ridge 一样处理相关特征，从而达到更好的平衡？\n\n答案是 **ElasticNet**。它同时使用了 L1 和 L2 两种正则化，通过一个 `l1_ratio` 参数来控制两者的权重。\n\n**你的任务 (Vibe Coding 实践)**:\n\n-   向你的 AI 助手发出一个新的、更精密的 Prompt，要求它使用 `ElasticNetCV`。这个模型不仅会自动寻找最佳的 `alpha`，还能同时找到最佳的 `l1_ratio`，实现正则化策略的“双重优化”。\n\n> **提示 (Prompt):**\n>\n> “非常棒的基线模型！现在，让我们来做一个优化。我知道当特征高度相关时，Lasso 可能会表现得不稳定。请帮我换用 **`ElasticNetCV`** 模型来代替 `LassoCV`。\n>\n> -   请在 Pipeline 中使用 `ElasticNetCV`。\n> -   让它自动在 **5 折交叉验证**中同时寻找最佳的 `alpha` 和 `l1_ratio`。\n> -   对于 `l1_ratio`，请在一个合理的范围内进行搜索，例如 `[0.1, 0.5, 0.7, 0.9, 0.95, 0.99, 1]`。\n> -   其他步骤（数据加载、标准化、评估、SHAP解释）保持不变。\n>\n> 请提供更新后的完整代码。”\n\n-   **对比分析**：\n    -   `ElasticNetCV` 找到的最佳 `alpha` 和 `l1_ratio` 是什么？\n    -   与 `LassoCV` 的结果相比，新模型的 MSE 和 R-squared 有没有提升？\n    -   查看新模型的系数，与纯 Lasso 模型相比，被归零的特征数量是变多了还是变少了？\n    -   这个对比分析的过程，正是架构师在进行技术选型时的核心工作：**量化地评估不同方案之间的优劣与权衡 (trade-off)**。\n\n**3. Red Teaming AI: 模型的稳健性测试**\n\nLasso 模型的一个核心优势是能够进行特征选择，将“噪声特征”的系数惩罚到零。让我们来主动攻击和测试一下它的这个能力。\n\n**你的任务 (动手实践)**:\n\n-   请在 AI 生成的代码基础上，**手动为数据集增加几个完全无关的“噪声特征”**。例如：\n\n    ```python\n    # 在 X_train 和 X_test 中加入噪声特征\n    X_train['noise_1'] = np.random.randn(len(X_train))\n    X_train['noise_2'] = np.random.uniform(0, 100, len(X_train))\n    # (同样地为 X_test 添加)\n    ```\n-   重新运行整个训练和分析流程。\n-   **检查结果**：\n    -   在最终训练好的 Lasso 模型中，这两个噪声特征的系数 (`model.coef_`) 是否真的被惩罚到了零（或非常接近于零）？\n    -   在 SHAP 的摘要图中，这两个噪声特征是否排在重要性的最末尾？\n-   这个过程被称为**“模型红队测试 (Red Teaming)”**，即主动用各种“坏”数据来攻击和测试模型的表现，是确保模型在真实世界中稳健可靠的关键步骤。\n\n通过完成这两个阶段的思考和实践，你将深刻地体会到 Vibe Coding 的核心价值：**AI 负责快速实现一个 70 分的标准答案，而人类架构师通过融入深刻的业务理解和批判性思维，负责将方案从 70 分优化到 95 分。**\n","srcMarkdownNoYaml":"\n\n现在，我们将把本章学习的所有知识——线性回归、正则化、XAI——串联起来，完成一次端到端的 Vibe Coding 实践。我们将再次回到开篇的房价预测案例，但这一次，我们不仅要构建一个能用的模型，更要挑战自己，作为一个“系统架构师”，思考如何让模型与真实的商业目标对齐。\n\n::: {.callout-warning}\n## 一个重要的教学时刻：告别波士顿房价数据集\n\n在许多旧的教程和书籍中，你会看到一个名为“波士顿房价”的经典数据集。然而，本教材决定**不再使用**它。\n\n研究发现，该数据集包含一个基于种族偏见构建的、存在严重伦理问题的特征。继续使用它会不自觉地让模型学习并可能放大现实世界中的系统性不公。\n\n从 `scikit-learn` 1.2 版本开始，这个数据集已被正式移除。作为未来的机器学习系统架构师，识别并拒绝使用存在伦理风险的数据，是我们必须具备的核心素养之一。\n\n因此，在本次实践中，我们将使用 `scikit-learn` 官方推荐的替代品——**加州房价数据集 (California Housing Dataset)**。它规模更大，数据更现代，是学习回归任务的绝佳选择。\n:::\n\n\n### 任务描述\n\n我们将使用加州房价数据集来完成一个典型的回归任务。该数据集的预测目标是加州某地区房屋价格的中位数。\n\n### 第一阶段：AI 快速实现 (10分钟)\n\n在这一阶段，我们让 AI 扮演一个高效的“代码工程师”，快速地实现一个标准的、稳健的机器学习工作流。\n\n> **提示 (Prompt):**\n>\n> “你好，请帮我用 Python 的 `scikit-learn` 和 `shap` 库来解决一个房价预测问题。请使用**加州房价数据集 (California Housing Dataset)**。\n>\n> 请按以下步骤操作：\n>\n> 1.  从 `sklearn.datasets` 中使用 `fetch_california_housing` 加载数据集，并将数据分为训练集和测试集。\n> 2.  **构建一个Lasso回归模型**。由于特征的尺度不同，请在Pipeline中先使用 `StandardScaler` 对数据进行标准化处理。\n> 3.  使用 **5折交叉验证 (`LassoCV`)** 来自动寻找最佳的正则化强度超参数 (alpha)。  \n>    **补充说明：** 这里的 `alpha` 就是正则化项的强度参数，在数学公式中常常记作 $\\lambda$。在 `scikit-learn` 的 Lasso 实现中，`alpha` 和 $\\lambda$ 实际上是等价的，只是命名不同。它们都控制着正则化惩罚的力度，`alpha` 越大，模型系数被压缩得越厉害，特征选择越激进。\n> 4.  在测试集上评估模型的性能，打印出均方误差 (MSE) 和 R-squared ($R^2$)。\n> 5.  **使用 SHAP 库来解释你训练好的模型**。请生成并展示以下两种图：\n>     a.  针对测试集中**第一个样本**的 **SHAP 力图 (force plot)**。\n>     b.  针对整个**训练集**的 **SHAP 摘要图 (summary plot)**。\n>\n> 请提供完整的、可以直接运行的代码。”\n\n**学生观察**:\n将以上提示词交给 AI 助手。你将看到，AI 几乎能瞬间生成一个完整、专业的工作流代码。它处理了数据加载、标准化、超参数调优、模型评估和可解释性分析等所有标准步骤。这就是 Vibe Coding 的第一步：**将繁琐的、标准化的实现工作，最大程度地自动化。**\n\n### 第二阶段：人类优化与业务对齐 (30分钟)\n\n现在，轮到你——“系统架构师”——登场了。AI 给出的标准答案并不一定是商业上的最佳答案。你需要戴上“业务的眼镜”来审视这个模型，并提出更深刻的优化方向。\n\n请思考以下几个引导性问题：\n\n**1. 损失函数的“灵魂拷问”**\n\nAI 使用的 `LassoCV` 默认优化的目标是**均方误差 (Mean Squared Error, MSE)**。MSE 对所有错误一视同仁，预测高了1万和预测低了1万，在数学上是完全等价的。\n\n但**在真实的房产业务中，这两种错误的商业成本真的相同吗？**\n\n-   **高价低估 (Underestimation)**: 将一套实际价值50万美金的房子，错误地预测为48万。\n    -   *潜在后果*: 公司可能会以偏低的价格从房主手中收购，损失了2万的潜在收益；或者，给出的挂牌建议价过低，让卖家觉得我们不专业，从而流失客户。\n-   **低价高估 (Overestimation)**: 将一套实际价值40万美金的房子，错误地预测为42万。\n    -   *潜在后果*: 公司以过高的价格收购了房产，增加了库存风险；或者，建议的挂牌价过高，导致房子长期无人问津，浪费了营销资源和时间成本。\n\n**你的任务 (思考与伪代码)**:\n\n-   你认为哪种错误的商业成本更高？或者它们在不同场景下成本不同？\n-   如果让你设计一个新的、**非对称的损失函数**来取代 MSE，你会怎么设计？请尝试用伪代码或数学公式写出你的想法。例如：\n\n    ```\n    function asymmetric_loss(y_true, y_pred):\n        error = y_true - y_pred\n        if error > 0:  // 高价低估 (y_true > y_pred)\n            return 1.5 * (error ** 2) // 施加更大的惩罚\n        else: // 低价高估\n            return 1.0 * (error ** 2)\n    ```\n\n**2. 模型选择的权衡：从 Lasso 到 ElasticNet**\n\nLasso 很强大，但它有一个潜在的“个性”：当面对一组高度相关的特征时（例如，“房屋平均年龄”和“附近房屋平均年龄”），它倾向于随机选择其中一个特征，并将其他相关特征的系数压缩为零。这可能导致模型不稳定，并且可能会丢失一些有用的信息。\n\n作为架构师，你需要思考：有没有一种模型既能像 Lasso 一样进行特征选择，又能像 Ridge 一样处理相关特征，从而达到更好的平衡？\n\n答案是 **ElasticNet**。它同时使用了 L1 和 L2 两种正则化，通过一个 `l1_ratio` 参数来控制两者的权重。\n\n**你的任务 (Vibe Coding 实践)**:\n\n-   向你的 AI 助手发出一个新的、更精密的 Prompt，要求它使用 `ElasticNetCV`。这个模型不仅会自动寻找最佳的 `alpha`，还能同时找到最佳的 `l1_ratio`，实现正则化策略的“双重优化”。\n\n> **提示 (Prompt):**\n>\n> “非常棒的基线模型！现在，让我们来做一个优化。我知道当特征高度相关时，Lasso 可能会表现得不稳定。请帮我换用 **`ElasticNetCV`** 模型来代替 `LassoCV`。\n>\n> -   请在 Pipeline 中使用 `ElasticNetCV`。\n> -   让它自动在 **5 折交叉验证**中同时寻找最佳的 `alpha` 和 `l1_ratio`。\n> -   对于 `l1_ratio`，请在一个合理的范围内进行搜索，例如 `[0.1, 0.5, 0.7, 0.9, 0.95, 0.99, 1]`。\n> -   其他步骤（数据加载、标准化、评估、SHAP解释）保持不变。\n>\n> 请提供更新后的完整代码。”\n\n-   **对比分析**：\n    -   `ElasticNetCV` 找到的最佳 `alpha` 和 `l1_ratio` 是什么？\n    -   与 `LassoCV` 的结果相比，新模型的 MSE 和 R-squared 有没有提升？\n    -   查看新模型的系数，与纯 Lasso 模型相比，被归零的特征数量是变多了还是变少了？\n    -   这个对比分析的过程，正是架构师在进行技术选型时的核心工作：**量化地评估不同方案之间的优劣与权衡 (trade-off)**。\n\n**3. Red Teaming AI: 模型的稳健性测试**\n\nLasso 模型的一个核心优势是能够进行特征选择，将“噪声特征”的系数惩罚到零。让我们来主动攻击和测试一下它的这个能力。\n\n**你的任务 (动手实践)**:\n\n-   请在 AI 生成的代码基础上，**手动为数据集增加几个完全无关的“噪声特征”**。例如：\n\n    ```python\n    # 在 X_train 和 X_test 中加入噪声特征\n    X_train['noise_1'] = np.random.randn(len(X_train))\n    X_train['noise_2'] = np.random.uniform(0, 100, len(X_train))\n    # (同样地为 X_test 添加)\n    ```\n-   重新运行整个训练和分析流程。\n-   **检查结果**：\n    -   在最终训练好的 Lasso 模型中，这两个噪声特征的系数 (`model.coef_`) 是否真的被惩罚到了零（或非常接近于零）？\n    -   在 SHAP 的摘要图中，这两个噪声特征是否排在重要性的最末尾？\n-   这个过程被称为**“模型红队测试 (Red Teaming)”**，即主动用各种“坏”数据来攻击和测试模型的表现，是确保模型在真实世界中稳健可靠的关键步骤。\n\n通过完成这两个阶段的思考和实践，你将深刻地体会到 Vibe Coding 的核心价值：**AI 负责快速实现一个 70 分的标准答案，而人类架构师通过融入深刻的业务理解和批判性思维，负责将方案从 70 分优化到 95 分。**\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":false,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":true,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":false,"number-sections":false,"output-file":"5_5_vibe_coding_practice.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.8.14","theme":"cosmo","fig-cap-location":"bottom","title":"5.5 Vibe Coding 实践：从标准模型到业务对齐"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}