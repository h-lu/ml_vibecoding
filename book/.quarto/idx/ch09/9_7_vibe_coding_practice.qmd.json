{"title":"9.7 Vibe Coding 实践：拟合非线性边界","markdown":{"yaml":{"title":"9.7 Vibe Coding 实践：拟合非线性边界"},"headingText":"我们的目标","containsRefs":false,"markdown":"\n\n欢迎来到第九章的 Vibe Coding 实践！在本章中，我们从理论上学习了如何从单个神经元构建出强大的全连接网络，并了解了驱动它学习的“引擎”和让它变得更“深”的“神级装备”。\n\n现在，是时候将理论付诸实践了。我们的目标非常明确：**回到 `9.1` 节的那个线性模型无法解决的“月牙”分类问题，并使用我们新学的全连接网络（FCN）来完美地解决它。**\n\n通过这次实践，你将亲身体会到非线性激活函数和多层结构所带来的强大能力。\n\n- **构建你的第一个神经网络**：使用 PyTorch 或 TensorFlow，搭建一个简单的全连接网络。\n- **可视化决策边界**：将模型在训练过程中的决策边界动态地绘制出来，直观地感受模型是如何从一条直线，逐渐“扭曲”成能够拟合月牙形状的复杂曲线的。\n- **探索超参数**：通过调整网络结构（层数、神经元数量）、激活函数和正则化技术，理解它们对模型学习过程和最终结果的影响。\n\n\n### 第一阶段：AI 快速搭建 FCN 并实现可视化\n\n我们的核心任务是：创建一个可以对 `scikit-learn` 中的 `make_moons` 数据集进行分类的神经网络，并在训练的每个阶段都将其决策边界可视化。\n\n::: {.callout-important title=\"Vibe Coding 提示\"}\n**向你的 AI 助手发出指令：**\n\n“我需要使用 PyTorch 和 scikit-learn 来构建一个神经网络，对 `make_moons` 数据集进行分类，并可视化其训练过程。请帮我完成以下步骤：\n\n1.  **生成并准备数据**：使用 `sklearn.datasets.make_moons` 生成200个样本，噪声设置为0.2。将数据转换为 PyTorch 的 Tensor。\n2.  **定义网络架构**：\n    -   创建一个继承自 `torch.nn.Module` 的类来定义你的全连接网络。\n    -   网络结构为：输入层 (2个神经元) -> 隐藏层1 (16个神经元) -> ReLU激活 -> 隐藏层2 (16个神经元) -> ReLU激活 -> 输出层 (1个神经元) -> Sigmoid激活。\n3.  **定义损失与优化器**：\n    -   使用 `torch.nn.BCELoss` (二元交叉熵损失)作为损失函数。\n    -   使用 `torch.optim.Adam` 作为优化器，学习率设置为 0.01。\n4.  **训练循环**：\n    -   编写一个训练循环，迭代 1000 次。\n    -   在循环的每个步骤中，执行前向传播、计算损失、反向传播和更新权重。\n5.  **可视化决策边界**：\n    -   为了可视化，你需要一个辅助函数。这个函数会创建一个网格 (mesh grid)，然后用当前训练好的模型对网格上每个点的类别进行预测。\n    -   使用 `matplotlib.pyplot.contourf` 函数，根据模型的预测结果来绘制决策边界的背景色。\n    -   在训练循环中，每隔100次迭代，就调用这个可视化函数，绘制当前的决策边界，并将原始的 `make_moons` 数据点叠加在上面。可以使用 `plt.pause()` 来创建动态效果，或者将图片保存下来。\n\n请确保代码是完整且可以直接运行的。”\n:::\n\n*架构师的思考：这个 Prompt 非常清晰地将一个复杂的任务分解为了五个可执行的步骤。我们为 AI 提供了明确的网络结构、损失函数、优化器等关键信息，让它可以心无旁骛地聚焦于代码生成。同时，可视化的要求是这次实践的核心，它能将抽象的训练过程转化为直观的视觉反馈。*\n\n\n\n### 第二阶段：人类引导、探索与优化\n\nAI 已经为我们生成了可以工作的代码，并展示了模型学习的过程。现在，真正有趣的探索开始了。你应该能看到，决策边界从一条近乎直线，慢慢地变得越来越弯曲，最终严丝合缝地包裹住了月牙数据。\n\n**请你和你的学习小组，围绕以下问题进行探索和思考：**\n\n1.  **激活函数是关键吗？**\n    -   **动手修改**：回到你定义的网络模型中，将所有的 `ReLU` 激活函数**注释掉或移除**，换成线性的占位符（或者干脆什么都不加）。重新运行代码。\n    -   **观察与思考**：你看到了什么？决策边界还能变弯曲吗？为什么会这样？这个实验如何用最直观的方式证明了“非线性激活”是神经网络能够学习复杂模式的**根本原因**？\n\n2.  **网络深度/宽度的影响？**\n    -   **动手修改**：\n        -   **变浅变窄**：尝试将网络改为只有1个隐藏层，8个神经元。它的决策边界是什么样的？能完美拟合吗？\n        -   **变深变宽**：尝试增加到3个隐藏层，每层32个神经元。决策边界是变得更平滑了，还是更“过拟合”（出现一些奇怪的、不必要的弯曲）了？\n    -   **思考**：网络的深度和宽度，如何影响它拟合复杂函数的能力和过拟合的风险？\n\n3.  **正则化的力量**\n    -   **制造过拟合**：首先，将 `make_moons` 的噪声 `noise` 参数调高，比如到 `0.4`，让数据点的重叠更严重。然后，使用一个非常宽、非常深的网络（例如，4层，每层64个神经元）去训练它。你应该能观察到非常明显的过拟合现象——决策边界变得极其扭曲，试图将每一个嘈杂的点都分开。\n    -   **引入 Dropout**：现在，在你的网络模型的每个隐藏层后面，都加入一个 `torch.nn.Dropout` 层，p 值可以设置为 0.3。重新训练模型。\n    -   **观察与思考**：加入 Dropout 后，决策边界发生了什么变化？它是不是变得更平滑、更“合理”了？Dropout 是如何帮助模型抵抗噪声、防止过拟合的？\n\n通过以上实践，你不仅亲手构建并训练了你的第一个“深度”神经网络，更重要的是，你通过动手实验，深刻地理解了那些在理论课上听起来有些抽象的概念——非线性、网络容量、正则化——在实践中究竟意味着什么。这正是从“知道”到“理解”的关键一步。\n","srcMarkdownNoYaml":"\n\n欢迎来到第九章的 Vibe Coding 实践！在本章中，我们从理论上学习了如何从单个神经元构建出强大的全连接网络，并了解了驱动它学习的“引擎”和让它变得更“深”的“神级装备”。\n\n现在，是时候将理论付诸实践了。我们的目标非常明确：**回到 `9.1` 节的那个线性模型无法解决的“月牙”分类问题，并使用我们新学的全连接网络（FCN）来完美地解决它。**\n\n通过这次实践，你将亲身体会到非线性激活函数和多层结构所带来的强大能力。\n\n### 我们的目标\n- **构建你的第一个神经网络**：使用 PyTorch 或 TensorFlow，搭建一个简单的全连接网络。\n- **可视化决策边界**：将模型在训练过程中的决策边界动态地绘制出来，直观地感受模型是如何从一条直线，逐渐“扭曲”成能够拟合月牙形状的复杂曲线的。\n- **探索超参数**：通过调整网络结构（层数、神经元数量）、激活函数和正则化技术，理解它们对模型学习过程和最终结果的影响。\n\n\n### 第一阶段：AI 快速搭建 FCN 并实现可视化\n\n我们的核心任务是：创建一个可以对 `scikit-learn` 中的 `make_moons` 数据集进行分类的神经网络，并在训练的每个阶段都将其决策边界可视化。\n\n::: {.callout-important title=\"Vibe Coding 提示\"}\n**向你的 AI 助手发出指令：**\n\n“我需要使用 PyTorch 和 scikit-learn 来构建一个神经网络，对 `make_moons` 数据集进行分类，并可视化其训练过程。请帮我完成以下步骤：\n\n1.  **生成并准备数据**：使用 `sklearn.datasets.make_moons` 生成200个样本，噪声设置为0.2。将数据转换为 PyTorch 的 Tensor。\n2.  **定义网络架构**：\n    -   创建一个继承自 `torch.nn.Module` 的类来定义你的全连接网络。\n    -   网络结构为：输入层 (2个神经元) -> 隐藏层1 (16个神经元) -> ReLU激活 -> 隐藏层2 (16个神经元) -> ReLU激活 -> 输出层 (1个神经元) -> Sigmoid激活。\n3.  **定义损失与优化器**：\n    -   使用 `torch.nn.BCELoss` (二元交叉熵损失)作为损失函数。\n    -   使用 `torch.optim.Adam` 作为优化器，学习率设置为 0.01。\n4.  **训练循环**：\n    -   编写一个训练循环，迭代 1000 次。\n    -   在循环的每个步骤中，执行前向传播、计算损失、反向传播和更新权重。\n5.  **可视化决策边界**：\n    -   为了可视化，你需要一个辅助函数。这个函数会创建一个网格 (mesh grid)，然后用当前训练好的模型对网格上每个点的类别进行预测。\n    -   使用 `matplotlib.pyplot.contourf` 函数，根据模型的预测结果来绘制决策边界的背景色。\n    -   在训练循环中，每隔100次迭代，就调用这个可视化函数，绘制当前的决策边界，并将原始的 `make_moons` 数据点叠加在上面。可以使用 `plt.pause()` 来创建动态效果，或者将图片保存下来。\n\n请确保代码是完整且可以直接运行的。”\n:::\n\n*架构师的思考：这个 Prompt 非常清晰地将一个复杂的任务分解为了五个可执行的步骤。我们为 AI 提供了明确的网络结构、损失函数、优化器等关键信息，让它可以心无旁骛地聚焦于代码生成。同时，可视化的要求是这次实践的核心，它能将抽象的训练过程转化为直观的视觉反馈。*\n\n\n\n### 第二阶段：人类引导、探索与优化\n\nAI 已经为我们生成了可以工作的代码，并展示了模型学习的过程。现在，真正有趣的探索开始了。你应该能看到，决策边界从一条近乎直线，慢慢地变得越来越弯曲，最终严丝合缝地包裹住了月牙数据。\n\n**请你和你的学习小组，围绕以下问题进行探索和思考：**\n\n1.  **激活函数是关键吗？**\n    -   **动手修改**：回到你定义的网络模型中，将所有的 `ReLU` 激活函数**注释掉或移除**，换成线性的占位符（或者干脆什么都不加）。重新运行代码。\n    -   **观察与思考**：你看到了什么？决策边界还能变弯曲吗？为什么会这样？这个实验如何用最直观的方式证明了“非线性激活”是神经网络能够学习复杂模式的**根本原因**？\n\n2.  **网络深度/宽度的影响？**\n    -   **动手修改**：\n        -   **变浅变窄**：尝试将网络改为只有1个隐藏层，8个神经元。它的决策边界是什么样的？能完美拟合吗？\n        -   **变深变宽**：尝试增加到3个隐藏层，每层32个神经元。决策边界是变得更平滑了，还是更“过拟合”（出现一些奇怪的、不必要的弯曲）了？\n    -   **思考**：网络的深度和宽度，如何影响它拟合复杂函数的能力和过拟合的风险？\n\n3.  **正则化的力量**\n    -   **制造过拟合**：首先，将 `make_moons` 的噪声 `noise` 参数调高，比如到 `0.4`，让数据点的重叠更严重。然后，使用一个非常宽、非常深的网络（例如，4层，每层64个神经元）去训练它。你应该能观察到非常明显的过拟合现象——决策边界变得极其扭曲，试图将每一个嘈杂的点都分开。\n    -   **引入 Dropout**：现在，在你的网络模型的每个隐藏层后面，都加入一个 `torch.nn.Dropout` 层，p 值可以设置为 0.3。重新训练模型。\n    -   **观察与思考**：加入 Dropout 后，决策边界发生了什么变化？它是不是变得更平滑、更“合理”了？Dropout 是如何帮助模型抵抗噪声、防止过拟合的？\n\n通过以上实践，你不仅亲手构建并训练了你的第一个“深度”神经网络，更重要的是，你通过动手实验，深刻地理解了那些在理论课上听起来有些抽象的概念——非线性、网络容量、正则化——在实践中究竟意味着什么。这正是从“知道”到“理解”的关键一步。\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":false,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":true,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../assets/sidebar-collapse.css"],"toc":false,"number-sections":false,"highlight-style":"github","include-in-header":{"text":"<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n<link href=\"https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap\" rel=\"stylesheet\">\n<style>\n/* ChatGPT 风格变量 */\n:root {\n  --chatgpt-primary: #000000;\n  --chatgpt-secondary: #6b7280;\n  --chatgpt-background: #ffffff;\n  --chatgpt-surface: #f7f7f8;\n  --chatgpt-border: #e5e5e5;\n  --chatgpt-accent: #10a37f;\n}\n</style>\n"},"include-after-body":{"text":"<script src=\"assets/sidebar-collapse.js\"></script>\n"},"output-file":"9_7_vibe_coding_practice.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.8.14","theme":["cosmo","../assets/chatgpt-style.scss"],"fig-cap-location":"bottom","mainfont":"Inter, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Ubuntu, Cantarell, 'Noto Sans', sans-serif, 'Helvetica Neue', Arial, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'","monofont":"Monaco, 'SF Mono', 'Cascadia Code', 'Roboto Mono', Consolas, 'Courier New', monospace","fontsize":"16px","linestretch":1.6,"code-copy":true,"max-width":"1200px","title":"9.7 Vibe Coding 实践：拟合非线性边界"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}