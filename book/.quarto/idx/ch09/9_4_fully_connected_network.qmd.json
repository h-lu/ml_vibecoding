{"title":"9.4 全连接网络：从神经元到决策委员会","markdown":{"yaml":{"title":"9.4 全连接网络：从神经元到决策委员会"},"headingText":"网络的层次结构","containsRefs":false,"markdown":"\n\n单个神经元虽然引入了非线性，但它的表达能力仍然非常有限，它最多只能在空间中画出一条“带拐弯的线”。为了能够拟合像 `9.1` 节中“月牙形”那样的复杂边界，我们需要将大量的神经元组织起来，形成一个强大的网络。\n\n最基础、最直接的组织方式，就是**全连接网络 (Fully Connected Network, FCN)**，有时也被称为**多层感知机 (Multi-Layer Perceptron, MLP)**。\n\n\n一个全连接网络，通常由三种类型的“层” (Layer) 组成：\n\n1.  **输入层 (Input Layer)**\n    -   这不是一个真正的计算层，它只是一个“数据入口”。\n    -   这一层的“神经元”数量，由你的输入数据的**特征数量**决定。例如，如果要对一张 28x28 像素的灰度图片进行分类，你需要将其“压平”成一个 784 维的向量，那么输入层就需要 784 个神经元，每个神经元对应一个像素点的值。\n\n2.  **隐藏层 (Hidden Layers)**\n    -   这是网络真正的“思考”发生的地方。\n    -   一个全连接网络可以有一个或多个隐藏层。当隐藏层数量大于等于一时，我们就可以称之为**深度神经网络 (Deep Neural Network, DNN)**。\n    -   在全连接网络中，**前一层的所有神经元，都会与后一层的所有神经元相连接**，这也是“全连接”这个名字的由来。每一条连接线，都有一个自己独立的权重。\n    -   隐藏层的数量，以及每一层神经元的数量，是网络架构设计的核心超参数。它们共同决定了网络的**容量 (Capacity)** 或**表达能力 (Expressive Power)**。层数越多、每层的神经元越多，网络就越“深”、越“宽”，理论上就能拟合更复杂的函数。\n\n3.  **输出层 (Output Layer)**\n    -   这是网络的最后一层，负责输出最终的计算结果。\n    -   输出层神经元的数量和激活函数的选择，完全取决于你的**任务目标**：\n        -   **二元分类**：通常使用 1 个神经元，配合 Sigmoid 激活函数，输出一个 (0, 1) 之间的概率值。\n        -   **多元分类**：使用 N 个神经元（N 为类别总数），配合 Softmax 激活函数，输出一个 N 维的概率分布向量，每个值代表属于对应类别的概率。\n        -   **回归任务**：通常使用 1 个神经元，并且**不使用**任何激活函数（或者说，使用线性激活函数），直接输出一个连续的预测值。\n\n<div class=\"quarto-figure quarto-figure-center\">\n<img src=\"https://upload.wikimedia.org/wikipedia/commons/e/e4/Artificial_neural_network.svg\" class=\"img-fluid\" alt=\"多层感知机结构\" width=\"600\">\n<figcaption>一个包含一个输入层、一个隐藏层和一个输出层的全连接网络示意图 (图片来源: Wikimedia Commons)</figcaption>\n</div>\n\n### 信息的前向传播\n\n当一个数据样本被输入到网络中后，信息会像波浪一样，从输入层开始，逐层向前传播，直到输出层，这个过程被称为**前向传播 (Forward Propagation)**。\n\n在每一层，计算过程都是一样的：\n\n1.  该层的每一个神经元，都会接收来自前一层所有神经元的输出值。\n2.  对这些输入进行**加权求和**（每个连接都有自己的权重），并加上该神经元自身的偏置。\n3.  将加权和的结果，送入该层的**激活函数**（例如 ReLU）。\n4.  该神经元计算出的最终输出，又会作为下一层所有神经元的输入。\n\n这个过程周而复始，直到最后一层（输出层）计算出最终结果。\n\n### 全连接网络的“魔力”：通用近似定理\n\n为什么这样一个由简单神经元堆叠而成的结构，会有如此强大的威力？\n\n答案来自于一个深刻的数学定理——**通用近似定理 (Universal Approximation Theorem)**。这个定理非正式地讲，是指：\n\n> 一个包含**单个隐藏层**和**有限数量神经元**的全连接网络，只要其激活函数是**非线性的**，它就能够以**任意精度**，去近似任何一个连续函数。\n\n这个定理给了深度学习一个坚实的理论基石。它告诉我们，原则上，只要我们的网络足够“宽”，它就有潜力模拟出世界上任何复杂的、连续的输入-输出关系。\n\n::: {.callout-note title=\"架构师视角\"}\n-   **深度 vs. 宽度**：理论上，一个足够“宽”的单隐藏层网络就能近似任何函数，但实践证明，一个更“深”（拥有更多隐藏层）的网络，通常比一个“浅而宽”的网络**更有效率**。深度结构能够让网络学习到一种**层次化的特征表示**。例如，在图像识别中，第一层可能学习到边、角等基础特征；第二层将边、角组合成眼睛、鼻子等局部特征；第三层再将局部特征组合成一张完整的人脸。这种层次化的学习方式，比让一个巨大的单层网络去直接学习从像素到人脸的映射，要高效得多。\n-   **FCN 是许多高级架构的基础**：虽然在处理图像（CNN）和序列（RNN/Transformer）等特定结构的数据时，我们会使用更专门化的架构，但全连接层仍然是这些高级架构中不可或缺的组成部分。它通常被用在模型的**最后阶段**，作为一个“决策层”或“分类头”，将前面模块提取出的高级特征，最终映射到任务的输出上。例如，在 Transformer 的每个模块中，都有一个重要的前馈网络 (Feed-Forward Network) 子层，它本质上就是一个小型的全连接网络。\n\n我们已经知道，一个精心设计的全连接网络，理论上拥有了强大的表达能力。但下一个关键问题是：我们如何为这成千上万、甚至数百万的连接，找到**正确**的权重（$w$）和偏置（$b$）参数，从而让网络能够完成我们期望的任务呢？\n\n这就是下一节——“训练的引擎”——将要回答的问题。\n:::\n","srcMarkdownNoYaml":"\n\n单个神经元虽然引入了非线性，但它的表达能力仍然非常有限，它最多只能在空间中画出一条“带拐弯的线”。为了能够拟合像 `9.1` 节中“月牙形”那样的复杂边界，我们需要将大量的神经元组织起来，形成一个强大的网络。\n\n最基础、最直接的组织方式，就是**全连接网络 (Fully Connected Network, FCN)**，有时也被称为**多层感知机 (Multi-Layer Perceptron, MLP)**。\n\n### 网络的层次结构\n\n一个全连接网络，通常由三种类型的“层” (Layer) 组成：\n\n1.  **输入层 (Input Layer)**\n    -   这不是一个真正的计算层，它只是一个“数据入口”。\n    -   这一层的“神经元”数量，由你的输入数据的**特征数量**决定。例如，如果要对一张 28x28 像素的灰度图片进行分类，你需要将其“压平”成一个 784 维的向量，那么输入层就需要 784 个神经元，每个神经元对应一个像素点的值。\n\n2.  **隐藏层 (Hidden Layers)**\n    -   这是网络真正的“思考”发生的地方。\n    -   一个全连接网络可以有一个或多个隐藏层。当隐藏层数量大于等于一时，我们就可以称之为**深度神经网络 (Deep Neural Network, DNN)**。\n    -   在全连接网络中，**前一层的所有神经元，都会与后一层的所有神经元相连接**，这也是“全连接”这个名字的由来。每一条连接线，都有一个自己独立的权重。\n    -   隐藏层的数量，以及每一层神经元的数量，是网络架构设计的核心超参数。它们共同决定了网络的**容量 (Capacity)** 或**表达能力 (Expressive Power)**。层数越多、每层的神经元越多，网络就越“深”、越“宽”，理论上就能拟合更复杂的函数。\n\n3.  **输出层 (Output Layer)**\n    -   这是网络的最后一层，负责输出最终的计算结果。\n    -   输出层神经元的数量和激活函数的选择，完全取决于你的**任务目标**：\n        -   **二元分类**：通常使用 1 个神经元，配合 Sigmoid 激活函数，输出一个 (0, 1) 之间的概率值。\n        -   **多元分类**：使用 N 个神经元（N 为类别总数），配合 Softmax 激活函数，输出一个 N 维的概率分布向量，每个值代表属于对应类别的概率。\n        -   **回归任务**：通常使用 1 个神经元，并且**不使用**任何激活函数（或者说，使用线性激活函数），直接输出一个连续的预测值。\n\n<div class=\"quarto-figure quarto-figure-center\">\n<img src=\"https://upload.wikimedia.org/wikipedia/commons/e/e4/Artificial_neural_network.svg\" class=\"img-fluid\" alt=\"多层感知机结构\" width=\"600\">\n<figcaption>一个包含一个输入层、一个隐藏层和一个输出层的全连接网络示意图 (图片来源: Wikimedia Commons)</figcaption>\n</div>\n\n### 信息的前向传播\n\n当一个数据样本被输入到网络中后，信息会像波浪一样，从输入层开始，逐层向前传播，直到输出层，这个过程被称为**前向传播 (Forward Propagation)**。\n\n在每一层，计算过程都是一样的：\n\n1.  该层的每一个神经元，都会接收来自前一层所有神经元的输出值。\n2.  对这些输入进行**加权求和**（每个连接都有自己的权重），并加上该神经元自身的偏置。\n3.  将加权和的结果，送入该层的**激活函数**（例如 ReLU）。\n4.  该神经元计算出的最终输出，又会作为下一层所有神经元的输入。\n\n这个过程周而复始，直到最后一层（输出层）计算出最终结果。\n\n### 全连接网络的“魔力”：通用近似定理\n\n为什么这样一个由简单神经元堆叠而成的结构，会有如此强大的威力？\n\n答案来自于一个深刻的数学定理——**通用近似定理 (Universal Approximation Theorem)**。这个定理非正式地讲，是指：\n\n> 一个包含**单个隐藏层**和**有限数量神经元**的全连接网络，只要其激活函数是**非线性的**，它就能够以**任意精度**，去近似任何一个连续函数。\n\n这个定理给了深度学习一个坚实的理论基石。它告诉我们，原则上，只要我们的网络足够“宽”，它就有潜力模拟出世界上任何复杂的、连续的输入-输出关系。\n\n::: {.callout-note title=\"架构师视角\"}\n-   **深度 vs. 宽度**：理论上，一个足够“宽”的单隐藏层网络就能近似任何函数，但实践证明，一个更“深”（拥有更多隐藏层）的网络，通常比一个“浅而宽”的网络**更有效率**。深度结构能够让网络学习到一种**层次化的特征表示**。例如，在图像识别中，第一层可能学习到边、角等基础特征；第二层将边、角组合成眼睛、鼻子等局部特征；第三层再将局部特征组合成一张完整的人脸。这种层次化的学习方式，比让一个巨大的单层网络去直接学习从像素到人脸的映射，要高效得多。\n-   **FCN 是许多高级架构的基础**：虽然在处理图像（CNN）和序列（RNN/Transformer）等特定结构的数据时，我们会使用更专门化的架构，但全连接层仍然是这些高级架构中不可或缺的组成部分。它通常被用在模型的**最后阶段**，作为一个“决策层”或“分类头”，将前面模块提取出的高级特征，最终映射到任务的输出上。例如，在 Transformer 的每个模块中，都有一个重要的前馈网络 (Feed-Forward Network) 子层，它本质上就是一个小型的全连接网络。\n\n我们已经知道，一个精心设计的全连接网络，理论上拥有了强大的表达能力。但下一个关键问题是：我们如何为这成千上万、甚至数百万的连接，找到**正确**的权重（$w$）和偏置（$b$）参数，从而让网络能够完成我们期望的任务呢？\n\n这就是下一节——“训练的引擎”——将要回答的问题。\n:::\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":false,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":true,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":false,"number-sections":false,"output-file":"9_4_fully_connected_network.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.8.14","theme":"cosmo","fig-cap-location":"bottom","title":"9.4 全连接网络：从神经元到决策委员会"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}