{"title":"8.2 K-means：寻找群体的“能量中心”","markdown":{"yaml":{"title":"8.2 K-means：寻找群体的“能量中心”"},"headingText":"几何直觉：最小化群体的“总能量”","containsRefs":false,"markdown":"\n\nK-means 是迄今为止最著名、最广泛使用的聚类算法。它的成功源于其思想的简洁与高效。从第一性原理来看，K-means 算法试图解决一个非常直观的几何问题。\n\n\n想象一下，在一个二维平面上散落着一堆数据点。我们的任务是找到 K 个点，作为这 K 个群体的“中心”，然后将每个数据点都分配给离它最近的那个中心。\n\n我们如何判断一组“中心”的摆放位置是好是坏呢？一个很自然的想法是：**好的聚类，其簇内成员应该紧密地团结在自己的中心周围。**\n\nK-means 将这个想法量化为：**最小化所有数据点到其所属簇的质心 (Centroid) 的距离平方和**。这个“距离平方和”在物理学上被称为“转动惯量”，我们也可以将其通俗地理解为一个聚类系统的**“总能量”**。一个内部紧凑、稳定的系统，其总能量是最低的。\n\n所以，K-means 的目标可以被形式化地描述为：\n$$\n\\arg\\min_{\\mathbf{S}} \\sum_{i=1}^{K} \\sum_{\\mathbf{x} \\in S_i} \\left\\| \\mathbf{x} - \\boldsymbol{\\mu}_i \\right\\|^2\n$$\n其中，$\\boldsymbol{\\mu}_i$ 是第 i 个簇 $S_i$ 的质心。\n\n### 算法过程：一个不断寻求“稳态”的物理系统\n\n要直接解决上面这个优化问题非常困难。幸运的是，我们可以通过一个非常优雅的迭代算法——**期望最大化 (Expectation-Maximization, EM)** 的思想来逐步逼近最优解。我们可以把这个过程类比为一个物理系统的演化：\n\n1.  **初始化 (Initialization)**：随机地在数据空间中撒下 K 个“引力中心”（初始质心）。这些初始位置可能很糟糕，但没关系，系统会自动演化。\n\n2.  **分配 (Assignment / Expectation Step)**：对于每一个数据点，计算它与 K 个引力中心的距离，然后将它“捕获”或分配给离它最近的那个引力中心。这一步完成后，我们就暂时形成了 K 个簇。\n\n3.  **更新 (Update / Maximization Step)**：对于每一个引力中心，它会重新计算其所“捕获”到的所有数据点的几何中心（即均值），然后**移动到这个新的“重心”位置**。\n\n4.  **迭代 (Iteration)**：重复执行第 2 步（根据新的中心重新分配所有点）和第 3 步（根据新的分配重新计算中心位置），直到引力中心的位置不再发生变化（或变化非常小），此时系统达到了一个**“能量稳定”**的状态，我们就找到了一个（可能是局部的）最优解。\n\n### 互动演示：K-means 的动态演化\n\n\n下图由**三幅子图**构成，**分别对应三组不同的随机种子（Seed）**。拖动底部的 **“选择 K” 滑块（2–6）**，三幅子图会**同时**更新到该 K 下的聚类结果。\n每幅子图都标注了**质心**（黑色方块）和对应的 **Inertia**，便于横向比较。\n\n<iframe src=\"../assets/ch08/kmeans_three_seeds_k_slider.html\" width=\"100%\" height=\"600\" frameborder=\"0\"></iframe>\n\n**请与上图互动，并思考：**\n\n1. **初始化的重要性（随机性）**\n   对于同一个 K，**不同的随机种子**可能得到**不同的聚类结果**与 Inertia，这体现了 K-means 对初始化的敏感性（容易陷入局部最优）。`scikit-learn` 的 `init='k-means++'` 能**缓解但无法完全消除**这种随机性；实际建模时可用更大的 `n_init`（多次随机启动取最优）来稳健化结果。\n\n2. **K 值的选择（模型复杂度）**\n   拖动滑块观察 **K=2、3、4**：当 **K=3** 时，与数据的“自然”结构最契合；**K=2** 往往**合并**了本应分开的簇（欠拟合）；**K=4** 则可能把本来完整的簇**过度拆分**（过拟合）。另外注意 Inertia 会随 K 增大而下降，但**不能仅凭 Inertia 最小化来选 K**，常配合“肘部法”“轮廓系数”等指标综合判断。\n\n<iframe src=\"../assets/ch08/kmeans_elbow_plot.html\" width=\"100%\" height=\"480\" frameborder=\"0\"></iframe>\n\n### K-means 的阿喀琉斯之踵\n\n通过上面的分析和互动，我们可以清晰地看到 K-means 的两个主要局限性：\n\n1.  **K 值需要预先指定**：在大多数真实问题中，我们并不知道数据应该被分成几类。选择一个错误的 K 值，会导致毫无意义的聚类结果。\n2.  **对形状敏感**：K-means 的内在假设是簇的形状是**球形**的（或更准确地说，是凸的），因为它用一个“中心”来代表整个簇。如果数据的真实簇结构是条状的、环形的或者其他不规则形状，K-means 的表现会非常糟糕。\n\n这两个核心挑战，正是我们接下来要学习更高级聚类算法的根本原因。在下一节，我们将看到 DBSCAN 和层次聚类是如何从不同的视角来克服这些问题的。\n","srcMarkdownNoYaml":"\n\nK-means 是迄今为止最著名、最广泛使用的聚类算法。它的成功源于其思想的简洁与高效。从第一性原理来看，K-means 算法试图解决一个非常直观的几何问题。\n\n### 几何直觉：最小化群体的“总能量”\n\n想象一下，在一个二维平面上散落着一堆数据点。我们的任务是找到 K 个点，作为这 K 个群体的“中心”，然后将每个数据点都分配给离它最近的那个中心。\n\n我们如何判断一组“中心”的摆放位置是好是坏呢？一个很自然的想法是：**好的聚类，其簇内成员应该紧密地团结在自己的中心周围。**\n\nK-means 将这个想法量化为：**最小化所有数据点到其所属簇的质心 (Centroid) 的距离平方和**。这个“距离平方和”在物理学上被称为“转动惯量”，我们也可以将其通俗地理解为一个聚类系统的**“总能量”**。一个内部紧凑、稳定的系统，其总能量是最低的。\n\n所以，K-means 的目标可以被形式化地描述为：\n$$\n\\arg\\min_{\\mathbf{S}} \\sum_{i=1}^{K} \\sum_{\\mathbf{x} \\in S_i} \\left\\| \\mathbf{x} - \\boldsymbol{\\mu}_i \\right\\|^2\n$$\n其中，$\\boldsymbol{\\mu}_i$ 是第 i 个簇 $S_i$ 的质心。\n\n### 算法过程：一个不断寻求“稳态”的物理系统\n\n要直接解决上面这个优化问题非常困难。幸运的是，我们可以通过一个非常优雅的迭代算法——**期望最大化 (Expectation-Maximization, EM)** 的思想来逐步逼近最优解。我们可以把这个过程类比为一个物理系统的演化：\n\n1.  **初始化 (Initialization)**：随机地在数据空间中撒下 K 个“引力中心”（初始质心）。这些初始位置可能很糟糕，但没关系，系统会自动演化。\n\n2.  **分配 (Assignment / Expectation Step)**：对于每一个数据点，计算它与 K 个引力中心的距离，然后将它“捕获”或分配给离它最近的那个引力中心。这一步完成后，我们就暂时形成了 K 个簇。\n\n3.  **更新 (Update / Maximization Step)**：对于每一个引力中心，它会重新计算其所“捕获”到的所有数据点的几何中心（即均值），然后**移动到这个新的“重心”位置**。\n\n4.  **迭代 (Iteration)**：重复执行第 2 步（根据新的中心重新分配所有点）和第 3 步（根据新的分配重新计算中心位置），直到引力中心的位置不再发生变化（或变化非常小），此时系统达到了一个**“能量稳定”**的状态，我们就找到了一个（可能是局部的）最优解。\n\n### 互动演示：K-means 的动态演化\n\n\n下图由**三幅子图**构成，**分别对应三组不同的随机种子（Seed）**。拖动底部的 **“选择 K” 滑块（2–6）**，三幅子图会**同时**更新到该 K 下的聚类结果。\n每幅子图都标注了**质心**（黑色方块）和对应的 **Inertia**，便于横向比较。\n\n<iframe src=\"../assets/ch08/kmeans_three_seeds_k_slider.html\" width=\"100%\" height=\"600\" frameborder=\"0\"></iframe>\n\n**请与上图互动，并思考：**\n\n1. **初始化的重要性（随机性）**\n   对于同一个 K，**不同的随机种子**可能得到**不同的聚类结果**与 Inertia，这体现了 K-means 对初始化的敏感性（容易陷入局部最优）。`scikit-learn` 的 `init='k-means++'` 能**缓解但无法完全消除**这种随机性；实际建模时可用更大的 `n_init`（多次随机启动取最优）来稳健化结果。\n\n2. **K 值的选择（模型复杂度）**\n   拖动滑块观察 **K=2、3、4**：当 **K=3** 时，与数据的“自然”结构最契合；**K=2** 往往**合并**了本应分开的簇（欠拟合）；**K=4** 则可能把本来完整的簇**过度拆分**（过拟合）。另外注意 Inertia 会随 K 增大而下降，但**不能仅凭 Inertia 最小化来选 K**，常配合“肘部法”“轮廓系数”等指标综合判断。\n\n<iframe src=\"../assets/ch08/kmeans_elbow_plot.html\" width=\"100%\" height=\"480\" frameborder=\"0\"></iframe>\n\n### K-means 的阿喀琉斯之踵\n\n通过上面的分析和互动，我们可以清晰地看到 K-means 的两个主要局限性：\n\n1.  **K 值需要预先指定**：在大多数真实问题中，我们并不知道数据应该被分成几类。选择一个错误的 K 值，会导致毫无意义的聚类结果。\n2.  **对形状敏感**：K-means 的内在假设是簇的形状是**球形**的（或更准确地说，是凸的），因为它用一个“中心”来代表整个簇。如果数据的真实簇结构是条状的、环形的或者其他不规则形状，K-means 的表现会非常糟糕。\n\n这两个核心挑战，正是我们接下来要学习更高级聚类算法的根本原因。在下一节，我们将看到 DBSCAN 和层次聚类是如何从不同的视角来克服这些问题的。\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":false,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":true,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../assets/sidebar-collapse.css"],"toc":false,"number-sections":false,"highlight-style":"github","include-in-header":{"text":"<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n<link href=\"https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap\" rel=\"stylesheet\">\n<style>\n/* ChatGPT 风格变量 */\n:root {\n  --chatgpt-primary: #000000;\n  --chatgpt-secondary: #6b7280;\n  --chatgpt-background: #ffffff;\n  --chatgpt-surface: #f7f7f8;\n  --chatgpt-border: #e5e5e5;\n  --chatgpt-accent: #10a37f;\n}\n</style>\n"},"include-after-body":{"text":"<script src=\"assets/sidebar-collapse.js\"></script>\n"},"output-file":"8_2_kmeans.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.8.14","theme":["cosmo","../assets/chatgpt-style.scss"],"fig-cap-location":"bottom","mainfont":"Inter, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Ubuntu, Cantarell, 'Noto Sans', sans-serif, 'Helvetica Neue', Arial, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'","monofont":"Monaco, 'SF Mono', 'Cascadia Code', 'Roboto Mono', Consolas, 'Courier New', monospace","fontsize":"16px","linestretch":1.6,"code-copy":true,"max-width":"1200px","title":"8.2 K-means：寻找群体的“能量中心”"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}