---
title: "18.5 练习与作业"
---

### 1. 概念辨析：协作 vs. 协同

作为 AI 团队的领导者，精确地使用术语是你的基本功。在多智能体系统的语境下，请用你自己的话，并结合一个具体的例子，解释“协作 (Cooperation)”和“协同 (Coordination)”这两个概念的根本不同。

| 概念 | 核心定义 | 例子 (以“AI开发团队”为例) |
| :--- | :--- | :--- |
| **协作 (Cooperation)** | | |
| **协同 (Coordination)** | | |

*(请填充上表，作为你的回答。)*

### 2. Vibe Coding 架构挑战：设计一个包含“人类审批”节点的 AI 软件开发团队

在 `18.4` 的实践中，我们构建了一个线性的、全自动的内容创作团队。现在，你需要挑战一个更复杂、更真实的场景：一个包含**关键人工决策节点**的自动化软件开发工作流。

这是一个纯粹的架构设计练习，旨在锻炼你设计**人机混合系统**的能力。

**任务描述**：

请为你自己的毕业设计项目（或者一个你构思的软件项目），设计一个由 AI 智能体驱动，但包含人类开发者进行关键审核的自动化开发流程。

**第一阶段：定义你的 AI 开发团队**

1.  **确定核心角色**：你的 AI 开发团队至少需要包含以下两个核心角色。请为它们编写具体、清晰的**角色 (Role)**、**目标 (Goal)** 和**背景故事 (Backstory)**。
    -   **产品经理 (Product Manager)**：负责理解高层需求，并将其转化为详细的、可执行的功能规格说明 (Specification)。
    -   **程序员 (Programmer)**：负责根据功能规格说明，编写高质量的、功能完整的代码。

2.  **设计核心任务**：为上述两个角色，设计它们需要执行的核心任务 (Task)。

**第二阶段：设计包含“人类审批”的流程图**

1.  **思考关键节点**：在这个开发流程中，哪个环节的决策风险最高、最需要人类的智慧和经验来把关？（提示：是在需求定义阶段，还是代码实现阶段？）

2.  **绘制架构图**：
    -   请使用 Mermaid.js 语法，绘制出这个包含“人机协作点”的自动化开发流程图。
    -   图中必须清晰地体现以下流程：
        -   **起点**：人类提出一个高层次的产品需求 (例如，“我想要一个用户登录功能”)。
        -   **第一步**：“产品经理”智能体接收需求，自动生成详细的功能规格说明文档。
        -   **第二步 (关键)**：工作流**暂停**，进入一个“**等待人类开发者批准 (Wait for Human Approval)**”的状态。
        -   **第三步 (条件分支)**：
            -   如果人类开发者**批准**了规格说明，则工作流继续，将规格说明传递给“程序员”智能体。
            -   如果人类开发者**拒绝**了规格说明（并附上修改意见），则工作流应该怎么做？（提示：思考如何形成一个**修改循环**）。
        -   **第四步**：“程序员”智能体根据**被批准的**规格说明，编写最终的代码。
        -   **终点**：输出最终的代码。

3.  **技术选型**：
    -   根据你在 `18.3` 节学到的知识，你认为要实现这样一个需要“暂停并等待外部输入”并可能包含“循环”的复杂流程，哪个框架（`AutoGen`, `CrewAI`, `LangGraph`）最适合？请阐述你的理由。
    -   **追问**：如果你选择了功能最强大的 `LangGraph`，除了能满足所有功能需求外，相比于使用更上层的 `CrewAI`，你认为你的团队可能需要付出哪些**额外的开发成本**或面临哪些**新的挑战**？（这旨在考察你对架构决策中“权衡/Trade-off”的理解）

**第三阶段：阐述架构价值**

1.  **分析与反思**：
    -   你为什么要把“人类审批”节点设置在你所设计的位置？
    -   这个“人类在环路中 (Human-in-the-loop)”的设计，对于我们构建一个**既高效又可靠**的自动化开发系统，有何至关重要的启示？它如何在“最大化发挥 AI 效率”和“确保最终产品质量可控”这两个目标之间，取得一个精妙的平衡？

