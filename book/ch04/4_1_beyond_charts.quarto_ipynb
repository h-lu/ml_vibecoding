{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "title: \"4.1 超越图表：可视化作为一种“对话”\"\n",
        "---\n",
        "\n",
        "### 开篇商业挑战\n",
        "\n",
        "想象一下这个场景：你是一家快速发展的电商公司的数据分析师。CEO 刚刚给你发来一封邮件，语气有些担忧：“我看了上个季度的财报，我们的用户总数在增长，但**平均客单价（Average Order Value, AOV）**却意外下降了5%。我需要你搞清楚这是为什么。”\n",
        "\n",
        "你手上拿到的是一份巨大的原始数据表格，包含了过去六个月的数百万条交易记录。每一行都包含了订单ID、用户ID、购买金额、购买时间、商品类别等信息。\n",
        "\n",
        "你会怎么做？\n",
        "\n",
        "一个没有经验的分析师可能会尝试直接在数据表格中进行筛选、排序和计算，试图找到答案。但很快，他就会迷失在数百万行的细节中，就像想通过数清每一棵树来了解整片森林一样。他可能会计算出不同商品类别的平均价格，或是不同用户群体的平均消费额，但这都像是盲人摸象，很难形成一个整体的、有方向感的认知。\n",
        "\n",
        "### 第一性原理：可视化是将数据投影到“人类认知空间”\n",
        "\n",
        "这就是我们需要可视化的根本原因。其第一性原理是：**原始的、高维的表格数据对于人类大脑来说，是难以直接理解的“噪声”。数据可视化，本质上是将这些混乱的、高维的数字，通过几何编码（位置、大小、颜色、形状），“投影”到我们大脑能够高效处理的低维空间（通常是二维图形）的过程。**\n",
        "\n",
        "这个“投影”的过程，就是我们开启与数据“对话”的起点。\n",
        "\n",
        "-   **看数据表格**：就像是在听一万个人同时用我们听不懂的语言说话。信息量巨大，但我们无法理解。\n",
        "-   **看可视化图表**：就像是把这一万个人的话，翻译并总结成了一张简洁的会议纪要。我们可能丢失了一些细节，但却第一次抓住了谈话的**要点和模式**。\n",
        "\n",
        "让我们通过一个简单的例子来感受这种差异。\n",
        "\n",
        "假设我们有上千个客户的年龄和消费金额数据。\n",
        "\n",
        "**看表格（局部）**：\n",
        "| 用户ID | 年龄 | 上季度消费额 |\n",
        "| :--- | :--- | :--- |\n",
        "| ... | ... | ... |\n",
        "| 1023 | 28 | \\$150.7 |\n",
        "| 1024 | 45 | \\$320.1 |\n",
        "| 1025 | 23 | \\$89.5 |\n",
        "| 1026 | 38 | \\$250.0 |\n",
        "| ... | ... | ... |\n",
        "\n",
        "你能从这几行数据中发现什么规律吗？很难。\n",
        "\n",
        "**看可视化图表（散点图）**："
      ],
      "id": "b315e506"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| label: fig-scatter-intro\n",
        "#| fig-cap: 用户年龄与消费额关系的散点图\n",
        "#| echo: false\n",
        "#| eval: true\n",
        "\n",
        "import numpy as np\n",
        "import plotly.express as px\n",
        "import plotly.io as pio\n",
        "pio.renderers.default = \"notebook\"\n",
        "\n",
        "# 生成模拟数据\n",
        "np.random.seed(42)\n",
        "num_users = 500\n",
        "age = np.random.randint(18, 65, num_users)\n",
        "# 创建一个基础消费额，并让它与年龄有轻微的正相关\n",
        "base_spending = age * 5 + np.random.normal(0, 50, num_users)\n",
        "# 确保消费额不为负\n",
        "spending = np.maximum(50, base_spending + 100)\n",
        "\n",
        "# 创建数据框\n",
        "import pandas as pd\n",
        "df = pd.DataFrame({'年龄': age, '上季度消费额': spending})\n",
        "\n",
        "# 绘制散点图\n",
        "fig = px.scatter(df, x='年龄', y='上季度消费额', \n",
        "                 title='用户年龄 vs. 上季度消费额',\n",
        "                 labels={'年龄': '用户年龄', '上季度消费额': '消费额 ($)'},\n",
        "                 trendline='ols', # 添加一条趋势线\n",
        "                 trendline_color_override='red'\n",
        "                )\n",
        "\n",
        "fig.update_layout(width=700, height=400)\n",
        "fig.show()"
      ],
      "id": "fig-scatter-intro",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "现在，规律变得一目了然。我们甚至不需要精确的数字，就能立即“看”出几个关键信息：\n",
        "1.  **整体趋势**：随着年龄的增长，用户的消费额似乎有上升的趋势（红色趋势线）。\n",
        "2.  **数据分布**：大部分用户的消费额集中在 \\$100 到 \\$400 之间。\n",
        "3.  **潜在异常**：有几个消费额特别高的离群点，他们是谁？为什么消费这么多？\n",
        "\n",
        "仅仅一张图，就让我们提出了比查看几千行表格多得多的、有价值的问题。这就是可视化的力量：**它将认知负担当从“记忆和计算”转向了人类最擅长的“模式识别”。**\n",
        "\n",
        "回到我们最初的商业挑战——“为什么平均客单价下降了？”。有了可视化的工具，我们现在可以与数据进行更有策略的“对话”了：\n",
        "-   “你好，数据。请给我展示一下**不同时间**（按天或周）的平均客单价变化趋势。”（时间序列图）\n",
        "-   “好的，数据。现在请告诉我**不同商品类别**的平均客单价分布是怎样的？”（箱形图）\n",
        "-   “有趣，看起来是‘电子产品’这个高价值类别的销售额占比下降了。那么，**新老用户**的平均客单价有区别吗？”（分组条形图）\n",
        "\n",
        "通过这样一步步的可视化探索，我们从一个模糊的问题出发，通过与数据的“对话”，逐步定位问题的根源。这，就是数据侦探工作的核心。"
      ],
      "id": "d0825ee9"
    }
  ],
  "metadata": {
    "kernelspec": {
      "name": "python3",
      "language": "python",
      "display_name": "Python 3 (ipykernel)",
      "path": "/Users/wangxq/.pyenv/versions/3.9.13/share/jupyter/kernels/python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}