---
title: "10.6 练习与思考"
---

恭喜你完成了对现代语言智能核心架构的探索！你不仅理解了将语言“几何化”的第一性原理，还亲手搭建并优化了一个 RAG 问答机器人。现在，让我们通过以下练习来巩固和拓展你的知识。

### 概念与分析题

1.  **词向量的奇妙代数**
    请访问由奥斯陆大学语言技术小组提供的 **[Semantic Calculator](https://vectors.nlpl.eu/explore/embeddings/en/calculator/)** 这个在线工具。它加载了多种预训练好的词嵌入模型，并能让你直接体验词向量的代数运算。

    请尝试以下操作：
    -   在页面的第二个模块（标题为“positive”和“negative”的输入框）中进行实验。
    -   在“positive”框中输入 `king woman`，在“negative”框中输入 `man`。
    -   点击“Calculate!”按钮。系统会计算 `vector('king') + vector('woman') - vector('man')` 的结果，并找到离这个结果向量最近的词。看看排名第一的词是不是 "queen"？
    -   自由探索其他你感兴趣的词语类比关系

2.  **RAG 失败案例分析**
    请设想一个场景，其中 RAG 系统可能会给出一个看似相关、但实际上完全错误的答案。你认为这个错误最可能发生在哪个环节？
    -   A. **索引环节**：例如，文档分割不当，破坏了原文的语义。
    -   B. **检索环节**：例如，嵌入模型理解错了用户问题的意图，导致检索回来的文档块虽然表面上关键词匹配，但内容却不相关。
    -   C. **生成环节**：例如，检索到的文档块是正确的，但 LLM 在总结和生成答案时出现了“幻觉”或逻辑错误。
    
    请选择你认为最可能的选项，并简要阐述你的理由。

### Vibe Coding 挑战

1.  **提升 RAG 系统的可信度：引用来源**
    一个好的问答机器人，不仅应该给出正确答案，还应该告诉用户答案的来源，以供核对。这能极大地提升系统的可信度。

    回到你在 `10.5` 节的 Vibe Coding 实践。现在，请尝试指导你的 AI 编程助手，对 RAG 系统进行功能增强，让它在回答问题的同时，也能引用其答案所依据的原文片段。
    
    > **提示 (Prompt):**
    >
    > “你好，我想升级我们之前做的 RAG 问答机器人，让它更值得信赖。
    >
    > 1.  请修改 RAG 链，使其在返回答案的同时，也能返回它所参考的**源文档块 (Source Documents)**。`LangChain` 中的链通常可以返回一个包含 `answer` 和 `source_documents` 的字典。
    > 2.  在得到结果后，请将最终的答案和每个源文档块的内容（包括其元数据 `metadata`，里面通常包含了源文件名）都清晰地打印出来。
    >
    > 这样，当用户看到答案时，就能立刻知道这个答案是基于哪些具体文档的哪一部分内容生成的。”

    你的目标是，通过这次实践，理解在设计一个负责任的 AI 系统时，**“可解释性”和“可追溯性”** 是与“准确性”同等重要的架构目标。
