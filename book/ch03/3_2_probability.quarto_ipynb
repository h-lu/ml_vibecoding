{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "title: \"3.2 概率：拥抱与量化“不确定性”\"\n",
        "---\n",
        "\n",
        "### 第一性原理：世界充满不确定性，概率是理性的语言\n",
        "\n",
        "如果说向量空间是数据在计算机中静态的“形态”，那么概率论就是我们用来描述和推理这个数据世界动态变化的“语言”。它的第一性原理是：**世界是充满不确定性的，而机器学习模型给出的预测，本质上也不是一个确定的答案，而是一个关于可能性的陈述。概率论，就是我们用来精确描述、量化和管理这种不确定性的通用语言。**\n",
        "\n",
        "当我们说“模型预测明天的股价会涨”时，一个更严谨的系统设计师会理解为“模型认为明天的股价上涨的概率很高”。当我们说“这个用户是潜在的流失客户”时，我们的意思是“根据现有数据，该用户属于‘流失’这个类别的概率大于某个阈值”。\n",
        "\n",
        "拥抱不确定性，并学会用概率的语言来思考，是从业余爱好者到专业系统设计师的关键一步。\n",
        "\n",
        "### 核心概念\n",
        "\n",
        "要掌握概率的直觉，我们同样只需要理解三个核心概念：\n",
        "\n",
        "1.  **概率分布 (Probability Distribution)**: 它是一张描述随机变量所有**可能取值**及其**发生可能性**的“蓝图”。例如，掷一颗骰子，它的概率分布就是 `{1: 1/6, 2: 1/6, 3: 1/6, 4: 1/6, 5: 1/6, 6: 1/6}`。对于连续变量（如人的身高），概率分布则是一条曲线（如正态分布曲线），曲线下的面积代表概率。\n",
        "\n",
        "2.  **条件概率 (Conditional Probability)**: 这是所有“学习”得以发生的核心。它描述的是：**在已知某个信息（或事件B）发生后，另一个事件（A）发生的概率**。记作 `P(A|B)`，读作“在B发生的条件下A的概率”。例如，`P(下雨|天空乌云密布)` 就会远大于 `P(下雨)`。学习的过程，就是不断用新的数据（证据）作为条件，来更新我们对事件概率的判断。\n",
        "\n",
        "3.  **贝叶斯定理 (Bayes' Theorem)**: 这是实施条件概率更新的数学“金科玉律”。它提供了一个精确的公式，告诉我们如何将**先验概率 (Prior)**（在看到新证据之前的信念）与**证据 (Evidence)** 相结合，来得到**后验概率 (Posterior)**（看到新证据之后更新了的信念）。其本质是：\n",
        "    \n",
        "    `后验概率 ∝ 先验概率 × 证据的可信度`\n",
        "\n",
        "    我们将在后续章节中反复看到贝叶斯定理的强大威力。\n",
        "\n",
        "### 零数学入门：互动动画\n",
        "\n",
        "#### 动画1：抽球实验与概率分布\n",
        "\n",
        "想象一个罐子，里面装着不同颜色的球。每次从中随机抽取一个，记录其颜色。这个简单的实验可以让我们直观地感受到概率和概率分布。"
      ],
      "id": "b0a7b4a6"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| label: fig-probability-1\n",
        "#| fig-cap: 调整罐中红球和蓝球的数量，观察抽到红球的概率如何变化。\n",
        "#| echo: false\n",
        "#| eval: true\n",
        "import plotly.graph_objects as go\n",
        "from ipywidgets import interact, IntSlider\n",
        "\n",
        "# 创建一个FigureWidget\n",
        "fig = go.FigureWidget()\n",
        "\n",
        "# 添加一个条形图\n",
        "fig.add_trace(go.Bar(x=['红球', '蓝球'], y=[0.5, 0.5], marker_color=['crimson', 'royalblue']))\n",
        "fig.update_layout(\n",
        "    title_text=\"抽球实验的概率分布\",\n",
        "    yaxis_title=\"概率\",\n",
        "    yaxis=dict(range=[0, 1])\n",
        ")\n",
        "\n",
        "@interact(red_balls=IntSlider(min=1, max=100, step=1, value=50, description='红球数量'),\n",
        "          blue_balls=IntSlider(min=1, max=100, step=1, value=50, description='蓝球数量'))\n",
        "def update_prob(red_balls, blue_balls):\n",
        "    total_balls = red_balls + blue_balls\n",
        "    prob_red = red_balls / total_balls\n",
        "    prob_blue = blue_balls / total_balls\n",
        "    with fig.batch_update():\n",
        "        fig.data[0].y = [prob_red, prob_blue]\n",
        "\n",
        "fig"
      ],
      "id": "fig-probability-1",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "*请拖动滑块，改变罐中红球和蓝球的数量。注意观察图表中代表的“概率分布”是如何随之变化的。*\n",
        "\n",
        "#### 动画2：天气预测与条件概率\n",
        "\n",
        "让我们来看一个简单的天气预测场景。假设根据历史数据，某地6月份下雨的**先验概率**是30%。现在，你早上醒来，拉开窗帘，看到了一个新证据：**天空乌云密布**。这个证据会如何更新你对“今天会下雨”的信念？\n",
        "\n",
        "我们还需要一个数据：在所有下雨天中，有90%的日子是乌云密布的 `(P(乌云|下雨) = 0.9)`。同时，在所有不下雨的日子里，也有20%是乌云密布的 `(P(乌云|不下雨) = 0.2)`。\n",
        "\n",
        "根据贝叶斯定理，我们可以计算出**后验概率** `P(下雨|乌云)`。"
      ],
      "id": "8de3a214"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| label: fig-bayes-weather\n",
        "#| fig-cap: 贝叶斯定理如何根据“天空乌云密布”这个证据，更新对“下雨”的信念。\n",
        "#| echo: false\n",
        "#| eval: true\n",
        "\n",
        "import plotly.graph_objects as go\n",
        "\n",
        "# 先验概率\n",
        "p_rain = 0.3\n",
        "p_no_rain = 1 - p_rain\n",
        "\n",
        "# 证据的可信度（似然）\n",
        "p_cloud_given_rain = 0.9\n",
        "p_cloud_given_no_rain = 0.2\n",
        "\n",
        "# 计算证据的总概率 P(乌云)\n",
        "# P(乌云) = P(乌云|下雨)P(下雨) + P(乌云|不下雨)P(不下雨)\n",
        "p_cloud = p_cloud_given_rain * p_rain + p_cloud_given_no_rain * p_no_rain\n",
        "\n",
        "# 计算后验概率 P(下雨|乌云)\n",
        "# P(下雨|乌云) = P(乌云|下雨)P(下雨) / P(乌云)\n",
        "p_rain_given_cloud = (p_cloud_given_rain * p_rain) / p_cloud\n",
        "\n",
        "fig = go.Figure(data=[\n",
        "    go.Bar(name='先验概率', x=['下雨'], y=[p_rain], marker_color='lightblue', text=f'{p_rain:.0%}', textposition='auto'),\n",
        "    go.Bar(name='后验概率 (得知乌云后)', x=['下雨'], y=[p_rain_given_cloud], marker_color='royalblue', text=f'{p_rain_given_cloud:.0%}', textposition='auto')\n",
        "])\n",
        "\n",
        "fig.update_layout(\n",
        "    barmode='group',\n",
        "    title_text='信念更新：从先验到后验',\n",
        "    yaxis_title='概率',\n",
        "    yaxis=dict(range=[0, 1]),\n",
        "    legend_title_text='概率类型',\n",
        "    width=600,\n",
        "    height=400\n",
        ")\n",
        "fig.show()"
      ],
      "id": "fig-bayes-weather",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "从图中可以看到，在得知“天空乌云密布”这个强有力的证据后，我们对“今天会下雨”的信念（概率）从原来的30%大幅跃升至约69%。这就是学习的本质——**根据新证据，不断调整和更新我们对世界不确定性的认知**。\n",
        "\n",
        "### 行为经济学联系：有限理性\n",
        "\n",
        "概率论，特别是贝叶斯定理，为我们理解人类的决策过程提供了一个强大的理论框架。行为经济学的先驱丹尼尔·卡尼曼（Daniel Kahneman）和阿摩司·特沃斯基（Amos Tversky）的研究表明，人类在做决策时，并非完全理性的“经济人”，而是**有限理性 (Bounded Rationality)** 的。我们的大脑似乎在无意识地运用一种简化的、直觉式的贝叶斯推理。\n",
        "\n",
        "我们根据过去的经验形成对事物的**先验信念**，然后在接收到新的信息（**证据**）时，我们会更新自己的看法。然而，由于认知偏差（例如“可得性启发”、“锚定效应”），我们的更新过程往往不够精确，不如贝叶斯公式计算出来的那么理性。\n",
        "\n",
        "理解这一点对于系统设计师至关重要。你需要认识到，你自己和你的用户，在解读模型输出的概率时，都会受到认知偏差的影响。一个模型输出的“90%的概率”，在不同的人看来可能有完全不同的分量。因此，设计一个好的机器学习系统，不仅要关注模型本身的准确性，还要关注如何将模型输出的不确定性，以一种能够减少认知偏差的方式呈现给最终的决策者。"
      ],
      "id": "4cb97829"
    }
  ],
  "metadata": {
    "kernelspec": {
      "name": "python3",
      "language": "python",
      "display_name": "Python 3 (ipykernel)",
      "path": "/Users/wangxq/.pyenv/versions/3.9.13/share/jupyter/kernels/python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}